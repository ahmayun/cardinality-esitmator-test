
============================STATS========================================
Actual Count: 134
Estimated Count: 136
Abs diff: 2
============================QUERY========================================
select  
  subq_0.c0 as c0, 
  cast(nullif(subq_0.c0,
    subq_0.c0) as INTEGER) as c1, 
  subq_0.c0 as c2, 
  subq_0.c0 as c3
from 
  (select  
        ref_0.cp_catalog_number as c0
      from 
        main.catalog_page as ref_0
      where ref_0.cp_catalog_page_id is not NULL
      limit 136) as subq_0
where subq_0.c0 is not NULL
limit 148
============================OUTPUT========================================
[c0: int, c1: int ... 2 more fields]
============================PLAN========================================
== Parsed Logical Plan ==
'GlobalLimit 148
+- 'LocalLimit 148
   +- 'Project ['subq_0.c0 AS c0#2258, cast('nullif('subq_0.c0, 'subq_0.c0) as int) AS c1#2259, 'subq_0.c0 AS c2#2260, 'subq_0.c0 AS c3#2261]
      +- 'Filter isnotnull('subq_0.c0)
         +- 'SubqueryAlias subq_0
            +- 'GlobalLimit 136
               +- 'LocalLimit 136
                  +- 'Project ['ref_0.cp_catalog_number AS c0#2257]
                     +- 'Filter isnotnull('ref_0.cp_catalog_page_id)
                        +- 'SubqueryAlias ref_0
                           +- 'UnresolvedRelation [main, catalog_page]

== Analyzed Logical Plan ==
c0: int, c1: int, c2: int, c3: int
GlobalLimit 148
+- LocalLimit 148
   +- Project [c0#2257 AS c0#2258, cast(nullif(c0#2257, c0#2257) as int) AS c1#2259, c0#2257 AS c2#2260, c0#2257 AS c3#2261]
      +- Filter isnotnull(c0#2257)
         +- SubqueryAlias subq_0
            +- GlobalLimit 136
               +- LocalLimit 136
                  +- Project [cp_catalog_number#177 AS c0#2257]
                     +- Filter isnotnull(cp_catalog_page_id#173)
                        +- SubqueryAlias ref_0
                           +- SubqueryAlias spark_catalog.main.catalog_page
                              +- Relation[cp_catalog_page_sk#172,cp_catalog_page_id#173,cp_start_date_sk#174,cp_end_date_sk#175,cp_department#176,cp_catalog_number#177,cp_catalog_page_number#178,cp_description#179,cp_type#180] parquet

== Optimized Logical Plan ==
GlobalLimit 148
+- LocalLimit 148
   +- Project [c0#2257, if ((c0#2257 = c0#2257)) null else c0#2257 AS c1#2259, c0#2257 AS c2#2260, c0#2257 AS c3#2261]
      +- Filter isnotnull(c0#2257)
         +- GlobalLimit 136
            +- LocalLimit 136
               +- Project [cp_catalog_number#177 AS c0#2257]
                  +- Filter isnotnull(cp_catalog_page_id#173)
                     +- Relation[cp_catalog_page_sk#172,cp_catalog_page_id#173,cp_start_date_sk#174,cp_end_date_sk#175,cp_department#176,cp_catalog_number#177,cp_catalog_page_number#178,cp_description#179,cp_type#180] parquet

== Physical Plan ==
CollectLimit 148
+- *(2) Project [c0#2257, if ((c0#2257 = c0#2257)) null else c0#2257 AS c1#2259, c0#2257 AS c2#2260, c0#2257 AS c3#2261]
   +- *(2) Filter isnotnull(c0#2257)
      +- *(2) GlobalLimit 136
         +- Exchange SinglePartition, true, [id=#1030]
            +- *(1) LocalLimit 136
               +- *(1) Project [cp_catalog_number#177 AS c0#2257]
                  +- *(1) Filter isnotnull(cp_catalog_page_id#173)
                     +- *(1) ColumnarToRow
                        +- FileScan parquet main.catalog_page[cp_catalog_page_id#173,cp_catalog_number#177] Batched: true, DataFilters: [isnotnull(cp_catalog_page_id#173)], Format: Parquet, Location: InMemoryFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-ma..., PartitionFilters: [], PushedFilters: [IsNotNull(cp_catalog_page_id)], ReadSchema: struct<cp_catalog_page_id:string,cp_catalog_number:int>

