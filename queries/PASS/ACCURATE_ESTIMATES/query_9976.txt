
============================STATS========================================
Actual Count: 111
Estimated Count: 111
Abs diff: 0
============================QUERY========================================
select  
  ref_0.cr_ship_mode_sk as c0, 
  ref_0.cr_net_loss as c1, 
  ref_0.cr_return_amount as c2, 
  ref_0.cr_refunded_cdemo_sk as c3
from 
  main.catalog_returns as ref_0
where ref_0.cr_return_quantity is not NULL
limit 111
============================OUTPUT========================================
[c0: int, c1: decimal(7,2) ... 2 more fields]
============================PLAN========================================
== Parsed Logical Plan ==
'GlobalLimit 111
+- 'LocalLimit 111
   +- 'Project ['ref_0.cr_ship_mode_sk AS c0#7392, 'ref_0.cr_net_loss AS c1#7393, 'ref_0.cr_return_amount AS c2#7394, 'ref_0.cr_refunded_cdemo_sk AS c3#7395]
      +- 'Filter isnotnull('ref_0.cr_return_quantity)
         +- 'SubqueryAlias ref_0
            +- 'UnresolvedRelation [main, catalog_returns]

== Analyzed Logical Plan ==
c0: int, c1: decimal(7,2), c2: decimal(7,2), c3: int
GlobalLimit 111
+- LocalLimit 111
   +- Project [cr_ship_mode_sk#216 AS c0#7392, cr_net_loss#229 AS c1#7393, cr_return_amount#221 AS c2#7394, cr_refunded_cdemo_sk#207 AS c3#7395]
      +- Filter isnotnull(cr_return_quantity#220)
         +- SubqueryAlias ref_0
            +- SubqueryAlias spark_catalog.main.catalog_returns
               +- Relation[cr_returned_time_sk#204,cr_item_sk#205,cr_refunded_customer_sk#206,cr_refunded_cdemo_sk#207,cr_refunded_hdemo_sk#208,cr_refunded_addr_sk#209,cr_returning_customer_sk#210,cr_returning_cdemo_sk#211,cr_returning_hdemo_sk#212,cr_returning_addr_sk#213,cr_call_center_sk#214,cr_catalog_page_sk#215,cr_ship_mode_sk#216,cr_warehouse_sk#217,cr_reason_sk#218,cr_order_number#219L,cr_return_quantity#220,cr_return_amount#221,cr_return_tax#222,cr_return_amt_inc_tax#223,cr_fee#224,cr_return_ship_cost#225,cr_refunded_cash#226,cr_reversed_charge#227,... 3 more fields] parquet

== Optimized Logical Plan ==
GlobalLimit 111
+- LocalLimit 111
   +- Project [cr_ship_mode_sk#216 AS c0#7392, cr_net_loss#229 AS c1#7393, cr_return_amount#221 AS c2#7394, cr_refunded_cdemo_sk#207 AS c3#7395]
      +- Filter isnotnull(cr_return_quantity#220)
         +- Relation[cr_returned_time_sk#204,cr_item_sk#205,cr_refunded_customer_sk#206,cr_refunded_cdemo_sk#207,cr_refunded_hdemo_sk#208,cr_refunded_addr_sk#209,cr_returning_customer_sk#210,cr_returning_cdemo_sk#211,cr_returning_hdemo_sk#212,cr_returning_addr_sk#213,cr_call_center_sk#214,cr_catalog_page_sk#215,cr_ship_mode_sk#216,cr_warehouse_sk#217,cr_reason_sk#218,cr_order_number#219L,cr_return_quantity#220,cr_return_amount#221,cr_return_tax#222,cr_return_amt_inc_tax#223,cr_fee#224,cr_return_ship_cost#225,cr_refunded_cash#226,cr_reversed_charge#227,... 3 more fields] parquet

== Physical Plan ==
CollectLimit 111
+- *(1) Project [cr_ship_mode_sk#216 AS c0#7392, cr_net_loss#229 AS c1#7393, cr_return_amount#221 AS c2#7394, cr_refunded_cdemo_sk#207 AS c3#7395]
   +- *(1) Filter isnotnull(cr_return_quantity#220)
      +- *(1) ColumnarToRow
         +- FileScan parquet main.catalog_returns[cr_refunded_cdemo_sk#207,cr_ship_mode_sk#216,cr_return_quantity#220,cr_return_amount#221,cr_net_loss#229,cr_returned_date_sk#230] Batched: true, DataFilters: [isnotnull(cr_return_quantity#220)], Format: Parquet, Location: CatalogFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-mai..., PartitionFilters: [], PushedFilters: [IsNotNull(cr_return_quantity)], ReadSchema: struct<cr_refunded_cdemo_sk:int,cr_ship_mode_sk:int,cr_return_quantity:int,cr_return_amount:decim...

