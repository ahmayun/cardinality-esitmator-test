
============================STATS========================================
Actual Count: 2750846
Estimated Count: No Estimate
Abs diff: 2750847
============================QUERY========================================
select  
  ref_0.ss_sold_date_sk as c0, 
  ref_0.ss_customer_sk as c1, 
  ref_0.ss_ticket_number as c2, 
  ref_0.ss_store_sk as c3, 
  ref_0.ss_sales_price as c4, 
  ref_0.ss_wholesale_cost as c5
from 
  main.store_sales as ref_0
where ref_0.ss_sold_date_sk is not NULL
============================OUTPUT========================================
[c0: int, c1: int ... 4 more fields]
============================PLAN========================================
== Parsed Logical Plan ==
'Project ['ref_0.ss_sold_date_sk AS c0#4910, 'ref_0.ss_customer_sk AS c1#4911, 'ref_0.ss_ticket_number AS c2#4912, 'ref_0.ss_store_sk AS c3#4913, 'ref_0.ss_sales_price AS c4#4914, 'ref_0.ss_wholesale_cost AS c5#4915]
+- 'Filter isnotnull('ref_0.ss_sold_date_sk)
   +- 'SubqueryAlias ref_0
      +- 'UnresolvedRelation [main, store_sales]

== Analyzed Logical Plan ==
c0: int, c1: int, c2: bigint, c3: int, c4: decimal(7,2), c5: decimal(7,2)
Project [ss_sold_date_sk#1050 AS c0#4910, ss_customer_sk#1030 AS c1#4911, ss_ticket_number#1036L AS c2#4912L, ss_store_sk#1034 AS c3#4913, ss_sales_price#1040 AS c4#4914, ss_wholesale_cost#1038 AS c5#4915]
+- Filter isnotnull(ss_sold_date_sk#1050)
   +- SubqueryAlias ref_0
      +- SubqueryAlias spark_catalog.main.store_sales
         +- Relation[ss_sold_time_sk#1028,ss_item_sk#1029,ss_customer_sk#1030,ss_cdemo_sk#1031,ss_hdemo_sk#1032,ss_addr_sk#1033,ss_store_sk#1034,ss_promo_sk#1035,ss_ticket_number#1036L,ss_quantity#1037,ss_wholesale_cost#1038,ss_list_price#1039,ss_sales_price#1040,ss_ext_discount_amt#1041,ss_ext_sales_price#1042,ss_ext_wholesale_cost#1043,ss_ext_list_price#1044,ss_ext_tax#1045,ss_coupon_amt#1046,ss_net_paid#1047,ss_net_paid_inc_tax#1048,ss_net_profit#1049,ss_sold_date_sk#1050] parquet

== Optimized Logical Plan ==
Project [ss_sold_date_sk#1050 AS c0#4910, ss_customer_sk#1030 AS c1#4911, ss_ticket_number#1036L AS c2#4912L, ss_store_sk#1034 AS c3#4913, ss_sales_price#1040 AS c4#4914, ss_wholesale_cost#1038 AS c5#4915]
+- Filter isnotnull(ss_sold_date_sk#1050)
   +- Relation[ss_sold_time_sk#1028,ss_item_sk#1029,ss_customer_sk#1030,ss_cdemo_sk#1031,ss_hdemo_sk#1032,ss_addr_sk#1033,ss_store_sk#1034,ss_promo_sk#1035,ss_ticket_number#1036L,ss_quantity#1037,ss_wholesale_cost#1038,ss_list_price#1039,ss_sales_price#1040,ss_ext_discount_amt#1041,ss_ext_sales_price#1042,ss_ext_wholesale_cost#1043,ss_ext_list_price#1044,ss_ext_tax#1045,ss_coupon_amt#1046,ss_net_paid#1047,ss_net_paid_inc_tax#1048,ss_net_profit#1049,ss_sold_date_sk#1050] parquet

== Physical Plan ==
*(1) Project [ss_sold_date_sk#1050 AS c0#4910, ss_customer_sk#1030 AS c1#4911, ss_ticket_number#1036L AS c2#4912L, ss_store_sk#1034 AS c3#4913, ss_sales_price#1040 AS c4#4914, ss_wholesale_cost#1038 AS c5#4915]
+- *(1) ColumnarToRow
   +- FileScan parquet main.store_sales[ss_customer_sk#1030,ss_store_sk#1034,ss_ticket_number#1036L,ss_wholesale_cost#1038,ss_sales_price#1040,ss_sold_date_sk#1050] Batched: true, DataFilters: [], Format: Parquet, Location: InMemoryFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-ma..., PartitionFilters: [isnotnull(ss_sold_date_sk#1050)], PushedFilters: [], ReadSchema: struct<ss_customer_sk:int,ss_store_sk:int,ss_ticket_number:bigint,ss_wholesale_cost:decimal(7,2),...

