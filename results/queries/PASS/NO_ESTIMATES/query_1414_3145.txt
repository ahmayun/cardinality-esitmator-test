
============================STATS========================================
Actual Count: 3145
Estimated Count: No Estimate
Abs diff: 3146
============================QUERY========================================
select  
  cast(coalesce(ref_0.wr_return_quantity,
    ref_0.wr_return_ship_cost) as INTEGER) as c0, 
  ref_0.wr_item_sk as c1, 
  ref_0.wr_refunded_addr_sk as c2
from 
  main.web_returns as ref_0
where ref_0.wr_return_quantity is NULL
============================OUTPUT========================================
[c0: int, c1: int ... 1 more field]
============================PLAN========================================
== Parsed Logical Plan ==
'Project [cast('coalesce('ref_0.wr_return_quantity, 'ref_0.wr_return_ship_cost) as int) AS c0#3194, 'ref_0.wr_item_sk AS c1#3195, 'ref_0.wr_refunded_addr_sk AS c2#3196]
+- 'Filter isnull('ref_0.wr_return_quantity)
   +- 'SubqueryAlias ref_0
      +- 'UnresolvedRelation [main, web_returns]

== Analyzed Logical Plan ==
c0: int, c1: int, c2: int
Project [cast(coalesce(cast(wr_return_quantity#2832 as decimal(12,2)), cast(wr_return_ship_cost#2837 as decimal(12,2))) as int) AS c0#3194, wr_item_sk#2820 AS c1#3195, wr_refunded_addr_sk#2824 AS c2#3196]
+- Filter isnull(wr_return_quantity#2832)
   +- SubqueryAlias ref_0
      +- SubqueryAlias spark_catalog.main.web_returns
         +- Relation[wr_returned_time_sk#2819,wr_item_sk#2820,wr_refunded_customer_sk#2821,wr_refunded_cdemo_sk#2822,wr_refunded_hdemo_sk#2823,wr_refunded_addr_sk#2824,wr_returning_customer_sk#2825,wr_returning_cdemo_sk#2826,wr_returning_hdemo_sk#2827,wr_returning_addr_sk#2828,wr_web_page_sk#2829,wr_reason_sk#2830,wr_order_number#2831L,wr_return_quantity#2832,wr_return_amt#2833,wr_return_tax#2834,wr_return_amt_inc_tax#2835,wr_fee#2836,wr_return_ship_cost#2837,wr_refunded_cash#2838,wr_reversed_charge#2839,wr_account_credit#2840,wr_net_loss#2841,wr_returned_date_sk#2842] parquet

== Optimized Logical Plan ==
Project [cast(coalesce(cast(wr_return_quantity#2832 as decimal(12,2)), cast(wr_return_ship_cost#2837 as decimal(12,2))) as int) AS c0#3194, wr_item_sk#2820 AS c1#3195, wr_refunded_addr_sk#2824 AS c2#3196]
+- Filter isnull(wr_return_quantity#2832)
   +- Relation[wr_returned_time_sk#2819,wr_item_sk#2820,wr_refunded_customer_sk#2821,wr_refunded_cdemo_sk#2822,wr_refunded_hdemo_sk#2823,wr_refunded_addr_sk#2824,wr_returning_customer_sk#2825,wr_returning_cdemo_sk#2826,wr_returning_hdemo_sk#2827,wr_returning_addr_sk#2828,wr_web_page_sk#2829,wr_reason_sk#2830,wr_order_number#2831L,wr_return_quantity#2832,wr_return_amt#2833,wr_return_tax#2834,wr_return_amt_inc_tax#2835,wr_fee#2836,wr_return_ship_cost#2837,wr_refunded_cash#2838,wr_reversed_charge#2839,wr_account_credit#2840,wr_net_loss#2841,wr_returned_date_sk#2842] parquet

== Physical Plan ==
*(1) Project [cast(coalesce(cast(wr_return_quantity#2832 as decimal(12,2)), cast(wr_return_ship_cost#2837 as decimal(12,2))) as int) AS c0#3194, wr_item_sk#2820 AS c1#3195, wr_refunded_addr_sk#2824 AS c2#3196]
+- *(1) Filter isnull(wr_return_quantity#2832)
   +- *(1) ColumnarToRow
      +- FileScan parquet main.web_returns[wr_item_sk#2820,wr_refunded_addr_sk#2824,wr_return_quantity#2832,wr_return_ship_cost#2837,wr_returned_date_sk#2842] Batched: true, DataFilters: [isnull(wr_return_quantity#2832)], Format: Parquet, Location: CatalogFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-mai..., PartitionFilters: [], PushedFilters: [IsNull(wr_return_quantity)], ReadSchema: struct<wr_item_sk:int,wr_refunded_addr_sk:int,wr_return_quantity:int,wr_return_ship_cost:decimal(...

