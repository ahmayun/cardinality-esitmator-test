
============================STATS========================================
Actual Count: 83
Estimated Count: 83
Abs diff: 0
============================QUERY========================================
select  
  subq_0.c4 as c0
from 
  (select  
          ref_0.i_brand_id as c0, 
          ref_0.i_size as c1, 
          ref_0.i_size as c2, 
          ref_0.i_formulation as c3, 
          ref_0.i_item_sk as c4, 
          ref_0.i_brand_id as c5, 
          ref_0.i_container as c6, 
          ref_0.i_size as c7, 
          ref_0.i_class as c8, 
          ref_0.i_manufact_id as c9, 
          ref_0.i_item_desc as c10, 
          ref_0.i_brand as c11, 
          ref_0.i_current_price as c12
        from 
          main.item as ref_0
        where ref_0.i_current_price is not NULL) as subq_0
    right join main.web_returns as ref_1
    on (subq_0.c5 = ref_1.wr_returned_time_sk )
where ref_1.wr_returning_cdemo_sk is not NULL
limit 83
============================OUTPUT========================================
[c0: int]
============================PLAN========================================
== Parsed Logical Plan ==
'GlobalLimit 83
+- 'LocalLimit 83
   +- 'Project ['subq_0.c4 AS c0#2904]
      +- 'Filter isnotnull('ref_1.wr_returning_cdemo_sk)
         +- 'Join RightOuter, ('subq_0.c5 = 'ref_1.wr_returned_time_sk)
            :- 'SubqueryAlias subq_0
            :  +- 'Project ['ref_0.i_brand_id AS c0#2891, 'ref_0.i_size AS c1#2892, 'ref_0.i_size AS c2#2893, 'ref_0.i_formulation AS c3#2894, 'ref_0.i_item_sk AS c4#2895, 'ref_0.i_brand_id AS c5#2896, 'ref_0.i_container AS c6#2897, 'ref_0.i_size AS c7#2898, 'ref_0.i_class AS c8#2899, 'ref_0.i_manufact_id AS c9#2900, 'ref_0.i_item_desc AS c10#2901, 'ref_0.i_brand AS c11#2902, 'ref_0.i_current_price AS c12#2903]
            :     +- 'Filter isnotnull('ref_0.i_current_price)
            :        +- 'SubqueryAlias ref_0
            :           +- 'UnresolvedRelation [main, item]
            +- 'SubqueryAlias ref_1
               +- 'UnresolvedRelation [main, web_returns]

== Analyzed Logical Plan ==
c0: int
GlobalLimit 83
+- LocalLimit 83
   +- Project [c4#2895 AS c0#2904]
      +- Filter isnotnull(wr_returning_cdemo_sk#2826)
         +- Join RightOuter, (c5#2896 = wr_returned_time_sk#2819)
            :- SubqueryAlias subq_0
            :  +- Project [i_brand_id#679 AS c0#2891, i_size#687 AS c1#2892, i_size#687 AS c2#2893, i_formulation#688 AS c3#2894, i_item_sk#672 AS c4#2895, i_brand_id#679 AS c5#2896, i_container#691 AS c6#2897, i_size#687 AS c7#2898, i_class#682 AS c8#2899, i_manufact_id#685 AS c9#2900, i_item_desc#676 AS c10#2901, i_brand#680 AS c11#2902, i_current_price#677 AS c12#2903]
            :     +- Filter isnotnull(i_current_price#677)
            :        +- SubqueryAlias ref_0
            :           +- SubqueryAlias spark_catalog.main.item
            :              +- Relation[i_item_sk#672,i_item_id#673,i_rec_start_date#674,i_rec_end_date#675,i_item_desc#676,i_current_price#677,i_wholesale_cost#678,i_brand_id#679,i_brand#680,i_class_id#681,i_class#682,i_category_id#683,i_category#684,i_manufact_id#685,i_manufact#686,i_size#687,i_formulation#688,i_color#689,i_units#690,i_container#691,i_manager_id#692,i_product_name#693] parquet
            +- SubqueryAlias ref_1
               +- SubqueryAlias spark_catalog.main.web_returns
                  +- Relation[wr_returned_time_sk#2819,wr_item_sk#2820,wr_refunded_customer_sk#2821,wr_refunded_cdemo_sk#2822,wr_refunded_hdemo_sk#2823,wr_refunded_addr_sk#2824,wr_returning_customer_sk#2825,wr_returning_cdemo_sk#2826,wr_returning_hdemo_sk#2827,wr_returning_addr_sk#2828,wr_web_page_sk#2829,wr_reason_sk#2830,wr_order_number#2831L,wr_return_quantity#2832,wr_return_amt#2833,wr_return_tax#2834,wr_return_amt_inc_tax#2835,wr_fee#2836,wr_return_ship_cost#2837,wr_refunded_cash#2838,wr_reversed_charge#2839,wr_account_credit#2840,wr_net_loss#2841,wr_returned_date_sk#2842] parquet

== Optimized Logical Plan ==
GlobalLimit 83
+- LocalLimit 83
   +- Project [c4#2895 AS c0#2904]
      +- Join RightOuter, (c5#2896 = wr_returned_time_sk#2819)
         :- Project [i_item_sk#672 AS c4#2895, i_brand_id#679 AS c5#2896]
         :  +- Filter (isnotnull(i_current_price#677) AND isnotnull(i_brand_id#679))
         :     +- Relation[i_item_sk#672,i_item_id#673,i_rec_start_date#674,i_rec_end_date#675,i_item_desc#676,i_current_price#677,i_wholesale_cost#678,i_brand_id#679,i_brand#680,i_class_id#681,i_class#682,i_category_id#683,i_category#684,i_manufact_id#685,i_manufact#686,i_size#687,i_formulation#688,i_color#689,i_units#690,i_container#691,i_manager_id#692,i_product_name#693] parquet
         +- Project [wr_returned_time_sk#2819]
            +- Filter isnotnull(wr_returning_cdemo_sk#2826)
               +- Relation[wr_returned_time_sk#2819,wr_item_sk#2820,wr_refunded_customer_sk#2821,wr_refunded_cdemo_sk#2822,wr_refunded_hdemo_sk#2823,wr_refunded_addr_sk#2824,wr_returning_customer_sk#2825,wr_returning_cdemo_sk#2826,wr_returning_hdemo_sk#2827,wr_returning_addr_sk#2828,wr_web_page_sk#2829,wr_reason_sk#2830,wr_order_number#2831L,wr_return_quantity#2832,wr_return_amt#2833,wr_return_tax#2834,wr_return_amt_inc_tax#2835,wr_fee#2836,wr_return_ship_cost#2837,wr_refunded_cash#2838,wr_reversed_charge#2839,wr_account_credit#2840,wr_net_loss#2841,wr_returned_date_sk#2842] parquet

== Physical Plan ==
CollectLimit 83
+- *(2) Project [c4#2895 AS c0#2904]
   +- *(2) BroadcastHashJoin [c5#2896], [wr_returned_time_sk#2819], RightOuter, BuildLeft
      :- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[1, int, true] as bigint))), [id=#1767]
      :  +- *(1) Project [i_item_sk#672 AS c4#2895, i_brand_id#679 AS c5#2896]
      :     +- *(1) Filter (isnotnull(i_current_price#677) AND isnotnull(i_brand_id#679))
      :        +- *(1) ColumnarToRow
      :           +- FileScan parquet main.item[i_item_sk#672,i_current_price#677,i_brand_id#679] Batched: true, DataFilters: [isnotnull(i_current_price#677), isnotnull(i_brand_id#679)], Format: Parquet, Location: InMemoryFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-ma..., PartitionFilters: [], PushedFilters: [IsNotNull(i_current_price), IsNotNull(i_brand_id)], ReadSchema: struct<i_item_sk:int,i_current_price:decimal(7,2),i_brand_id:int>
      +- *(2) Project [wr_returned_time_sk#2819]
         +- *(2) Filter isnotnull(wr_returning_cdemo_sk#2826)
            +- *(2) ColumnarToRow
               +- FileScan parquet main.web_returns[wr_returned_time_sk#2819,wr_returning_cdemo_sk#2826,wr_returned_date_sk#2842] Batched: true, DataFilters: [isnotnull(wr_returning_cdemo_sk#2826)], Format: Parquet, Location: CatalogFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-mai..., PartitionFilters: [], PushedFilters: [IsNotNull(wr_returning_cdemo_sk)], ReadSchema: struct<wr_returned_time_sk:int,wr_returning_cdemo_sk:int>

