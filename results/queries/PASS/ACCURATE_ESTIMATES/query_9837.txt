
============================STATS========================================
Actual Count: 94
Estimated Count: 94
Abs diff: 0
============================QUERY========================================
select  
  ref_1.date as c0, 
  ref_0.ws_list_price as c1, 
  ref_0.ws_bill_cdemo_sk as c2, 
  ref_0.ws_ext_list_price as c3
from 
  main.web_sales as ref_0
    inner join main.orders as ref_1
    on (ref_0.ws_web_page_sk = ref_1.c0 )
where ref_1.c3 is not NULL
limit 94
============================OUTPUT========================================
[c0: string, c1: decimal(7,2) ... 2 more fields]
============================PLAN========================================
== Parsed Logical Plan ==
'GlobalLimit 94
+- 'LocalLimit 94
   +- 'Project ['ref_1.date AS c0#7339, 'ref_0.ws_list_price AS c1#7340, 'ref_0.ws_bill_cdemo_sk AS c2#7341, 'ref_0.ws_ext_list_price AS c3#7342]
      +- 'Filter isnotnull('ref_1.c3)
         +- 'Join Inner, ('ref_0.ws_web_page_sk = 'ref_1.c0)
            :- 'SubqueryAlias ref_0
            :  +- 'UnresolvedRelation [main, web_sales]
            +- 'SubqueryAlias ref_1
               +- 'UnresolvedRelation [main, orders]

== Analyzed Logical Plan ==
c0: string, c1: decimal(7,2), c2: int, c3: decimal(7,2)
GlobalLimit 94
+- LocalLimit 94
   +- Project [date#750 AS c0#7339, ws_list_price#3093 AS c1#7340, ws_bill_cdemo_sk#3078 AS c2#7341, ws_ext_list_price#3098 AS c3#7342]
      +- Filter isnotnull(c3#749)
         +- Join Inner, (ws_web_page_sk#3085 = c0#743)
            :- SubqueryAlias ref_0
            :  +- SubqueryAlias spark_catalog.main.web_sales
            :     +- Relation[ws_sold_time_sk#3074,ws_ship_date_sk#3075,ws_item_sk#3076,ws_bill_customer_sk#3077,ws_bill_cdemo_sk#3078,ws_bill_hdemo_sk#3079,ws_bill_addr_sk#3080,ws_ship_customer_sk#3081,ws_ship_cdemo_sk#3082,ws_ship_hdemo_sk#3083,ws_ship_addr_sk#3084,ws_web_page_sk#3085,ws_web_site_sk#3086,ws_ship_mode_sk#3087,ws_warehouse_sk#3088,ws_promo_sk#3089,ws_order_number#3090L,ws_quantity#3091,ws_wholesale_cost#3092,ws_list_price#3093,ws_sales_price#3094,ws_ext_discount_amt#3095,ws_ext_sales_price#3096,ws_ext_wholesale_cost#3097,... 10 more fields] parquet
            +- SubqueryAlias ref_1
               +- SubqueryAlias spark_catalog.main.orders
                  +- Relation[c0#743,id#744,c1#745,user_id#746,c2#747,amount#748,c3#749,date#750] parquet

== Optimized Logical Plan ==
GlobalLimit 94
+- LocalLimit 94
   +- Project [date#750 AS c0#7339, ws_list_price#3093 AS c1#7340, ws_bill_cdemo_sk#3078 AS c2#7341, ws_ext_list_price#3098 AS c3#7342]
      +- Join Inner, (ws_web_page_sk#3085 = c0#743)
         :- Project [ws_bill_cdemo_sk#3078, ws_web_page_sk#3085, ws_list_price#3093, ws_ext_list_price#3098]
         :  +- Filter isnotnull(ws_web_page_sk#3085)
         :     +- Relation[ws_sold_time_sk#3074,ws_ship_date_sk#3075,ws_item_sk#3076,ws_bill_customer_sk#3077,ws_bill_cdemo_sk#3078,ws_bill_hdemo_sk#3079,ws_bill_addr_sk#3080,ws_ship_customer_sk#3081,ws_ship_cdemo_sk#3082,ws_ship_hdemo_sk#3083,ws_ship_addr_sk#3084,ws_web_page_sk#3085,ws_web_site_sk#3086,ws_ship_mode_sk#3087,ws_warehouse_sk#3088,ws_promo_sk#3089,ws_order_number#3090L,ws_quantity#3091,ws_wholesale_cost#3092,ws_list_price#3093,ws_sales_price#3094,ws_ext_discount_amt#3095,ws_ext_sales_price#3096,ws_ext_wholesale_cost#3097,... 10 more fields] parquet
         +- Project [c0#743, date#750]
            +- Filter (isnotnull(c3#749) AND isnotnull(c0#743))
               +- Relation[c0#743,id#744,c1#745,user_id#746,c2#747,amount#748,c3#749,date#750] parquet

== Physical Plan ==
CollectLimit 94
+- *(2) Project [date#750 AS c0#7339, ws_list_price#3093 AS c1#7340, ws_bill_cdemo_sk#3078 AS c2#7341, ws_ext_list_price#3098 AS c3#7342]
   +- *(2) BroadcastHashJoin [ws_web_page_sk#3085], [c0#743], Inner, BuildRight
      :- *(2) Project [ws_bill_cdemo_sk#3078, ws_web_page_sk#3085, ws_list_price#3093, ws_ext_list_price#3098]
      :  +- *(2) Filter isnotnull(ws_web_page_sk#3085)
      :     +- *(2) ColumnarToRow
      :        +- FileScan parquet main.web_sales[ws_bill_cdemo_sk#3078,ws_web_page_sk#3085,ws_list_price#3093,ws_ext_list_price#3098,ws_sold_date_sk#3107] Batched: true, DataFilters: [isnotnull(ws_web_page_sk#3085)], Format: Parquet, Location: CatalogFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-mai..., PartitionFilters: [], PushedFilters: [IsNotNull(ws_web_page_sk)], ReadSchema: struct<ws_bill_cdemo_sk:int,ws_web_page_sk:int,ws_list_price:decimal(7,2),ws_ext_list_price:decim...
      +- BroadcastExchange HashedRelationBroadcastMode(List(cast(input[0, int, true] as bigint))), [id=#9543]
         +- *(1) Project [c0#743, date#750]
            +- *(1) Filter (isnotnull(c3#749) AND isnotnull(c0#743))
               +- *(1) ColumnarToRow
                  +- FileScan parquet main.orders[c0#743,c3#749,date#750] Batched: true, DataFilters: [isnotnull(c3#749), isnotnull(c0#743)], Format: Parquet, Location: InMemoryFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/spark-warehouse/m..., PartitionFilters: [], PushedFilters: [IsNotNull(c3), IsNotNull(c0)], ReadSchema: struct<c0:int,c3:string,date:string>

