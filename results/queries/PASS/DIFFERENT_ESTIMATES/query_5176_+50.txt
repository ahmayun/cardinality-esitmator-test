
============================STATS========================================
Actual Count: 0
Estimated Count: 50
Abs diff: 50
============================QUERY========================================
select  
  subq_0.c1 as c0
from 
  (select  
        ref_0.sr_return_amt as c0, 
        ref_0.sr_store_credit as c1, 
        ref_0.sr_fee as c2, 
        ref_0.sr_ticket_number as c3, 
        ref_0.sr_return_amt_inc_tax as c4, 
        ref_0.sr_addr_sk as c5, 
        ref_0.sr_item_sk as c6, 
        ref_0.sr_ticket_number as c7, 
        ref_0.sr_return_time_sk as c8, 
        ref_0.sr_refunded_cash as c9, 
        ref_0.sr_hdemo_sk as c10, 
        ref_0.sr_return_ship_cost as c11, 
        ref_0.sr_store_sk as c12, 
        ref_0.sr_store_credit as c13, 
        69 as c14
      from 
        main.store_returns as ref_0
      where ref_0.sr_return_amt is not NULL
      limit 98) as subq_0
where subq_0.c7 is NULL
limit 50
============================OUTPUT========================================
[c0: decimal(7,2)]
============================PLAN========================================
== Parsed Logical Plan ==
'GlobalLimit 50
+- 'LocalLimit 50
   +- 'Project ['subq_0.c1 AS c0#4994]
      +- 'Filter isnull('subq_0.c7)
         +- 'SubqueryAlias subq_0
            +- 'GlobalLimit 98
               +- 'LocalLimit 98
                  +- 'Project ['ref_0.sr_return_amt AS c0#4979, 'ref_0.sr_store_credit AS c1#4980, 'ref_0.sr_fee AS c2#4981, 'ref_0.sr_ticket_number AS c3#4982, 'ref_0.sr_return_amt_inc_tax AS c4#4983, 'ref_0.sr_addr_sk AS c5#4984, 'ref_0.sr_item_sk AS c6#4985, 'ref_0.sr_ticket_number AS c7#4986, 'ref_0.sr_return_time_sk AS c8#4987, 'ref_0.sr_refunded_cash AS c9#4988, 'ref_0.sr_hdemo_sk AS c10#4989, 'ref_0.sr_return_ship_cost AS c11#4990, 'ref_0.sr_store_sk AS c12#4991, 'ref_0.sr_store_credit AS c13#4992, 69 AS c14#4993]
                     +- 'Filter isnotnull('ref_0.sr_return_amt)
                        +- 'SubqueryAlias ref_0
                           +- 'UnresolvedRelation [main, store_returns]

== Analyzed Logical Plan ==
c0: decimal(7,2)
GlobalLimit 50
+- LocalLimit 50
   +- Project [c1#4980 AS c0#4994]
      +- Filter isnull(c7#4986L)
         +- SubqueryAlias subq_0
            +- GlobalLimit 98
               +- LocalLimit 98
                  +- Project [sr_return_amt#1840 AS c0#4979, sr_store_credit#1847 AS c1#4980, sr_fee#1843 AS c2#4981, sr_ticket_number#1838L AS c3#4982L, sr_return_amt_inc_tax#1842 AS c4#4983, sr_addr_sk#1835 AS c5#4984, sr_item_sk#1831 AS c6#4985, sr_ticket_number#1838L AS c7#4986L, sr_return_time_sk#1830 AS c8#4987, sr_refunded_cash#1845 AS c9#4988, sr_hdemo_sk#1834 AS c10#4989, sr_return_ship_cost#1844 AS c11#4990, sr_store_sk#1836 AS c12#4991, sr_store_credit#1847 AS c13#4992, 69 AS c14#4993]
                     +- Filter isnotnull(sr_return_amt#1840)
                        +- SubqueryAlias ref_0
                           +- SubqueryAlias spark_catalog.main.store_returns
                              +- Relation[sr_return_time_sk#1830,sr_item_sk#1831,sr_customer_sk#1832,sr_cdemo_sk#1833,sr_hdemo_sk#1834,sr_addr_sk#1835,sr_store_sk#1836,sr_reason_sk#1837,sr_ticket_number#1838L,sr_return_quantity#1839,sr_return_amt#1840,sr_return_tax#1841,sr_return_amt_inc_tax#1842,sr_fee#1843,sr_return_ship_cost#1844,sr_refunded_cash#1845,sr_reversed_charge#1846,sr_store_credit#1847,sr_net_loss#1848,sr_returned_date_sk#1849] parquet

== Optimized Logical Plan ==
GlobalLimit 50
+- LocalLimit 50
   +- Project [c1#4980 AS c0#4994]
      +- Filter isnull(c7#4986L)
         +- GlobalLimit 98
            +- LocalLimit 98
               +- Project [sr_store_credit#1847 AS c1#4980, sr_ticket_number#1838L AS c7#4986L]
                  +- Filter isnotnull(sr_return_amt#1840)
                     +- Relation[sr_return_time_sk#1830,sr_item_sk#1831,sr_customer_sk#1832,sr_cdemo_sk#1833,sr_hdemo_sk#1834,sr_addr_sk#1835,sr_store_sk#1836,sr_reason_sk#1837,sr_ticket_number#1838L,sr_return_quantity#1839,sr_return_amt#1840,sr_return_tax#1841,sr_return_amt_inc_tax#1842,sr_fee#1843,sr_return_ship_cost#1844,sr_refunded_cash#1845,sr_reversed_charge#1846,sr_store_credit#1847,sr_net_loss#1848,sr_returned_date_sk#1849] parquet

== Physical Plan ==
CollectLimit 50
+- *(2) Project [c1#4980 AS c0#4994]
   +- *(2) Filter isnull(c7#4986L)
      +- *(2) GlobalLimit 98
         +- Exchange SinglePartition, true, [id=#5455]
            +- *(1) LocalLimit 98
               +- *(1) Project [sr_store_credit#1847 AS c1#4980, sr_ticket_number#1838L AS c7#4986L]
                  +- *(1) Filter isnotnull(sr_return_amt#1840)
                     +- *(1) ColumnarToRow
                        +- FileScan parquet main.store_returns[sr_ticket_number#1838L,sr_return_amt#1840,sr_store_credit#1847,sr_returned_date_sk#1849] Batched: true, DataFilters: [isnotnull(sr_return_amt#1840)], Format: Parquet, Location: CatalogFileIndex[file:/home/ahmad/Documents/project/cardinality-estimator-test/tpcds-data-for-mai..., PartitionFilters: [], PushedFilters: [IsNotNull(sr_return_amt)], ReadSchema: struct<sr_ticket_number:bigint,sr_return_amt:decimal(7,2),sr_store_credit:decimal(7,2)>

